{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\AD\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { json, useNavigate } from 'react-router-dom';\n// import { toast } from 'react-toastify'\nimport './Home.css';\n// import { post } from '../../../backend/routes/createPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [item, setItem] = useState([]);\n  useEffect(() => {}, []);\n  const toggleComment = post => {\n    if (show) {\n      setShow(false);\n    } else {\n      setShow(true);\n      setItem(post);\n      console.log(item);\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate('/signin');\n    }\n    fetch(\"http://localhost:4000/allposts\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setData(result);\n    }).catch(err => console.log(err));\n  }, []);\n  const likePost = id => {\n    fetch('http://localhost:4000/likes', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(result => {\n      const newData = data.map(post => {\n        if (post._id == result._id) {\n          return result;\n        } else {\n          return post;\n        }\n      });\n      // console.log('Like result:', result)\n      setData(newData);\n    }).catch(err => console.log('Fetch error:', err));\n  };\n  const unlikePost = id => {\n    fetch('http://localhost:4000/unlikes', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(result => {\n      const newData = data.map(post => {\n        if (post._id == result._id) {\n          return result;\n        } else {\n          return post;\n        }\n      });\n      // console.log('unLike result:', result)\n      setData(newData);\n    }).catch(err => console.log('Fetch error:', err));\n  };\n  const makeComment = (text, id) => {\n    fetch('http://localhost:4000/comment', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        text: text,\n        postId: id\n      })\n    }).then(res => {\n      res.json();\n    }).then(result => {\n      const newData = data.map(post => {\n        if (post._id == result._id) {\n          return result;\n        } else {\n          return post;\n        }\n      });\n      setData(newData);\n      setComment(\"\");\n    });\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"main\">\n    //   {data.map((post) => {\n    //     return (\n    //       <>\n    //         <div className='card'>\n    //           <div className=\"card-header\">\n    //             <div className=\"card-pic\">\n    //               <img src=\"https://th.bing.com/th/id/OIP.SAcV4rjQCseubnk32USHigHaHx?rs=1&pid=ImgDetMain\" alt=\"oops\" />\n    //             </div>\n    //             <h5 className='profile-name'>{post.postedBy.name}</h5>\n    //           </div>\n    //           <div className=\"card-image\">\n    //             <div className=\"img-size\">\n    //               <img src={post.photo} alt=\"oops\" srcset=\"\" />\n    //             </div>\n    //           </div>\n    //           <div className=\"card-content\">\n    //             <div className='like'>\n    //               {\n    //                 post.like.includes(JSON.parse(localStorage.getItem('user'))._id)\n    //                   ? (\n    //                     <span class=\"material-symbols-outlined material-symbols-outlined-red\" onClick={() => { unlikePost(post._id) }}>favorite</span>\n    //                   ) : (\n    //                     <span class=\"material-symbols-outlined\" onClick={() => { likePost(post._id) }}>favorite</span>\n    //                   )\n    //               }\n    //               <p className='no-like'>{post.like.length}Like</p>\n    //               <span class=\"material-symbols-outlined add\">person_add</span>\n    //             </div>\n    //             <p style={{cursor:'pointer'}} onClick={()=>{toggleComment(post)}}>View all comments</p>\n    //             <h3 className=\"book-name\">{post.title}</h3>\n    //             <div className=\"book-week\">\n    //               <p>per week â‚¹.</p>\n    //               <p className=\"week-charge\"> 00</p>\n    //             </div>\n    //           </div>\n    //           <div className=\"add-comment\">\n    //             <span className='material-symbols-outlined emoji'>mood</span>\n    //             <input type=\"text\" placeholder='Add message' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n    //             <button className=\"material-symbols-outlined send\" onClick={() => { makeComment(comment, post._id) }}>send</button>\n    //           </div>\n    //         </div>\n    //       </>\n    //     )\n    //   })}\n    //   {show && (\n    //   <div className='showComment'>\n    //     <div className='container'>\n    //       <div className='postPic'>\n    //         <img src={item.photo} alt=\"\" />\n    //       </div>\n    //       <div className=\"details\">\n    //         <div className=\"card-header\">\n    //           <div className=\"card-pic\">\n    //             <img src={item.photo} alt=\"oops\" />\n    //           </div>\n    //           <h5 className='profile-name'>{item.postedBy.name}</h5>\n    //         </div>\n    //        <div className=\"comment-section\">\n    //         {item.comments.map((comment)=>{\n    //          return (\n    //         <div className='comm'>\n    //           <p className='commenter' style={{fontWeight: 'bold'}}>{item.postedBy.name}</p>\n    //           <p className='commentText'>{comment.comment}</p>\n    //         </div>\n    //           )\n    //         })}\n    //        </div>\n    //         <div className=\"card-content\">\n    //           <p>{item.like.length} Likes</p>\n    //           <p>{item.body}</p>\n    //         </div>\n    //         <div className=\"add-comment\">\n    //           <span className='material-symbols-outlined emoji'>mood</span>\n    //           <input type=\"text\" placeholder='Add message' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n    //           <button className=\"material-symbols-outlined send\" onClick={()=>{\n    //             makeComment(comment, item._id)\n    //             toggleComment()\n    //           }}>send</button>\n    //         </div>\n    //       </div>\n    //     </div>\n    //     <div className=\"close\" onClick={()=>{\n    //       toggleComment()\n    //     }}>\n    //     <span class=\"material-symbols-outlined material-symbols-outlined-close\">close</span>\n    //     </div>\n    //   </div>)}\n    // </div>\n    _jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Home, \"vmqZa48lDpdcGkVrxc2mdJfP0ds=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","json","useNavigate","jsxDEV","_jsxDEV","Home","_s","navigate","data","setData","comment","setComment","show","setShow","item","setItem","toggleComment","post","console","log","token","localStorage","getItem","fetch","headers","then","res","result","catch","err","likePost","id","method","Authorization","body","JSON","stringify","postId","ok","Error","newData","map","_id","unlikePost","makeComment","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react/AD/frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { json, useNavigate } from 'react-router-dom'\r\n// import { toast } from 'react-toastify'\r\nimport './Home.css'\r\n// import { post } from '../../../backend/routes/createPost';\r\n\r\nexport default function Home() {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [item, setItem] = useState([]);\r\n\r\n  useEffect(()=>{\r\n\r\n  },[])\r\n\r\n  const toggleComment=(post)=>{\r\n    if(show){\r\n      setShow(false)\r\n    }else{\r\n      setShow(true)\r\n      setItem(post)\r\n      console.log(item)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (!token) {\r\n      navigate('/signin')\r\n    }\r\n\r\n    fetch(\"http://localhost:4000/allposts\", {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n      },\r\n    }).then(res => res.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        setData(result)\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }, [])\r\n\r\n  const likePost = (id) => {\r\n    fetch('http://localhost:4000/likes', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        const newData = data.map((post) => {\r\n          if (post._id == result._id) {\r\n            return result\r\n          }\r\n          else {\r\n            return post\r\n          }\r\n        })\r\n        // console.log('Like result:', result)\r\n        setData(newData)\r\n      })\r\n      .catch((err) => console.log('Fetch error:', err));\r\n  };\r\n\r\n  const unlikePost = (id) => {\r\n    fetch('http://localhost:4000/unlikes', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        const newData = data.map((post) => {\r\n          if (post._id == result._id) {\r\n            return result\r\n          }\r\n          else {\r\n            return post\r\n          }\r\n        })\r\n        // console.log('unLike result:', result)\r\n        setData(newData)\r\n      })\r\n      .catch((err) => console.log('Fetch error:', err));\r\n  };\r\n\r\n  const makeComment = (text, id) => {\r\n    fetch('http://localhost:4000/comment', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({\r\n        text: text,\r\n        postId: id,\r\n      })\r\n    })\r\n      .then((res) => { res.json() })\r\n      .then((result) => { \r\n        const newData = data.map((post) => {\r\n          if (post._id == result._id) {\r\n            return result\r\n          }\r\n          else {\r\n            return post\r\n          }\r\n        })\r\n        setData(newData)\r\n        setComment(\"\")\r\n      })\r\n  }\r\n\r\n  return (\r\n    // <div className=\"main\">\r\n    //   {data.map((post) => {\r\n    //     return (\r\n    //       <>\r\n    //         <div className='card'>\r\n    //           <div className=\"card-header\">\r\n    //             <div className=\"card-pic\">\r\n    //               <img src=\"https://th.bing.com/th/id/OIP.SAcV4rjQCseubnk32USHigHaHx?rs=1&pid=ImgDetMain\" alt=\"oops\" />\r\n    //             </div>\r\n    //             <h5 className='profile-name'>{post.postedBy.name}</h5>\r\n    //           </div>\r\n    //           <div className=\"card-image\">\r\n    //             <div className=\"img-size\">\r\n    //               <img src={post.photo} alt=\"oops\" srcset=\"\" />\r\n    //             </div>\r\n    //           </div>\r\n    //           <div className=\"card-content\">\r\n    //             <div className='like'>\r\n    //               {\r\n    //                 post.like.includes(JSON.parse(localStorage.getItem('user'))._id)\r\n    //                   ? (\r\n    //                     <span class=\"material-symbols-outlined material-symbols-outlined-red\" onClick={() => { unlikePost(post._id) }}>favorite</span>\r\n    //                   ) : (\r\n    //                     <span class=\"material-symbols-outlined\" onClick={() => { likePost(post._id) }}>favorite</span>\r\n    //                   )\r\n    //               }\r\n\r\n    //               <p className='no-like'>{post.like.length}Like</p>\r\n    //               <span class=\"material-symbols-outlined add\">person_add</span>\r\n    //             </div>\r\n    //             <p style={{cursor:'pointer'}} onClick={()=>{toggleComment(post)}}>View all comments</p>\r\n    //             <h3 className=\"book-name\">{post.title}</h3>\r\n    //             <div className=\"book-week\">\r\n    //               <p>per week â‚¹.</p>\r\n    //               <p className=\"week-charge\"> 00</p>\r\n    //             </div>\r\n    //           </div>\r\n    //           <div className=\"add-comment\">\r\n    //             <span className='material-symbols-outlined emoji'>mood</span>\r\n    //             <input type=\"text\" placeholder='Add message' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n    //             <button className=\"material-symbols-outlined send\" onClick={() => { makeComment(comment, post._id) }}>send</button>\r\n    //           </div>\r\n    //         </div>\r\n    //       </>\r\n    //     )\r\n    //   })}\r\n    //   {show && (\r\n    //   <div className='showComment'>\r\n    //     <div className='container'>\r\n    //       <div className='postPic'>\r\n    //         <img src={item.photo} alt=\"\" />\r\n    //       </div>\r\n    //       <div className=\"details\">\r\n    //         <div className=\"card-header\">\r\n    //           <div className=\"card-pic\">\r\n    //             <img src={item.photo} alt=\"oops\" />\r\n    //           </div>\r\n    //           <h5 className='profile-name'>{item.postedBy.name}</h5>\r\n    //         </div>\r\n    //        <div className=\"comment-section\">\r\n    //         {item.comments.map((comment)=>{\r\n    //          return (\r\n    //         <div className='comm'>\r\n    //           <p className='commenter' style={{fontWeight: 'bold'}}>{item.postedBy.name}</p>\r\n    //           <p className='commentText'>{comment.comment}</p>\r\n    //         </div>\r\n    //           )\r\n    //         })}\r\n            \r\n    //        </div>\r\n    //         <div className=\"card-content\">\r\n    //           <p>{item.like.length} Likes</p>\r\n    //           <p>{item.body}</p>\r\n    //         </div>\r\n    //         <div className=\"add-comment\">\r\n    //           <span className='material-symbols-outlined emoji'>mood</span>\r\n    //           <input type=\"text\" placeholder='Add message' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n    //           <button className=\"material-symbols-outlined send\" onClick={()=>{\r\n    //             makeComment(comment, item._id)\r\n    //             toggleComment()\r\n    //           }}>send</button>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //     <div className=\"close\" onClick={()=>{\r\n    //       toggleComment()\r\n    //     }}>\r\n    //     <span class=\"material-symbols-outlined material-symbols-outlined-close\">close</span>\r\n    //     </div>\r\n    //   </div>)}\r\n    // </div>\r\n    <h1></h1>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}